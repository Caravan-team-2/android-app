<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/AndroidManifest.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/AndroidManifest.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;&#10;    &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.ACCESS_COARSE_LOCATION&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.ACCESS_FINE_LOCATION&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.POST_NOTIFICATIONS&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot; android:maxSdkVersion=&quot;28&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.READ_EXTERNAL_STORAGE&quot; android:maxSdkVersion=&quot;32&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.NFC&quot; /&gt;&#10;&#10;&#10;    &lt;uses-permission android:name=&quot;android.permission.CAMERA&quot; /&gt;&#10;&#10;    &lt;uses-feature&#10;        android:name=&quot;android.hardware.camera&quot;&#10;        android:required=&quot;false&quot; /&gt;&#10;    &lt;uses-feature&#10;        android:name=&quot;android.hardware.camera.autofocus&quot;&#10;        android:required=&quot;false&quot; /&gt;&#10;&#10;    &lt;queries&gt;&#10;        &lt;intent&gt;&#10;            &lt;action android:name=&quot;android.intent.action.SENDTO&quot; /&gt;&#10;&#10;            &lt;data android:scheme=&quot;mailto&quot; /&gt;&#10;        &lt;/intent&gt;&#10;    &lt;/queries&gt;&#10;&#10;    &lt;application&#10;        android:allowBackup=&quot;true&quot;&#10;        android:dataExtractionRules=&quot;@xml/data_extraction_rules&quot;&#10;        android:fullBackupContent=&quot;@xml/backup_rules&quot;&#10;        android:icon=&quot;@mipmap/ic_launcher&quot;&#10;        android:label=&quot;@string/app_name&quot;&#10;        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;&#10;        android:name=&quot;.di.App&quot;&#10;        android:supportsRtl=&quot;true&quot;&#10;        android:theme=&quot;@style/Theme.SmartConstatClient&quot;&gt;&#10;        &lt;activity&#10;            android:name=&quot;.auth.presentation.AuthActivity&quot;&#10;            android:exported=&quot;true&quot;&#10;            android:launchMode=&quot;singleTop&quot;&#10;            android:configChanges=&quot;orientation|screenSize|screenLayout|keyboardHidden|navigation&quot;&gt;&#10;            &lt;intent-filter&gt;&#10;                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;&#10;&#10;                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;&#10;            &lt;/intent-filter&gt;&#10;        &lt;/activity&gt;&#10;        &lt;activity&#10;            android:name=&quot;.main.presentation.MainActivity&quot;&#10;            android:exported=&quot;false&quot;&#10;            android:configChanges=&quot;orientation|screenSize|screenLayout|keyboardHidden|navigation&quot; &gt;&#10;            &lt;intent-filter&gt;&#10;                &lt;action android:name=&quot;android.nfc.action.NDEF_DISCOVERED&quot; /&gt;&#10;                &lt;category android:name=&quot;android.intent.category.DEFAULT&quot; /&gt;&#10;                &lt;action android:name=&quot;android.nfc.action.TAG_DISCOVERED&quot; /&gt;&#10;                &lt;action android:name=&quot;android.nfc.action.TECH_DISCOVERED&quot; /&gt;&#10;                &lt;data android:mimeType=&quot;text/plain&quot; /&gt;&#10;            &lt;/intent-filter&gt;&#10;&#10;            &lt;meta-data&#10;                android:name=&quot;android.nfc.action.TECH_DISCOVERED&quot;&#10;                android:resource=&quot;@xml/nfc_tech_filter&quot; /&gt;&#10;        &lt;/activity&gt;&#10;    &lt;/application&gt;&#10;&#10;&lt;/manifest&gt;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;&#10;    &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.ACCESS_COARSE_LOCATION&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.ACCESS_FINE_LOCATION&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.POST_NOTIFICATIONS&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot; android:maxSdkVersion=&quot;28&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.READ_EXTERNAL_STORAGE&quot; android:maxSdkVersion=&quot;32&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.NFC&quot; /&gt;&#10;&#10;    &lt;!-- Declare NFC hardware as optional --&gt;&#10;    &lt;uses-feature android:name=&quot;android.hardware.nfc&quot; android:required=&quot;false&quot; /&gt;&#10;&#10;&#10;    &lt;uses-permission android:name=&quot;android.permission.CAMERA&quot; /&gt;&#10;&#10;    &lt;uses-feature&#10;        android:name=&quot;android.hardware.camera&quot;&#10;        android:required=&quot;false&quot; /&gt;&#10;    &lt;uses-feature&#10;        android:name=&quot;android.hardware.camera.autofocus&quot;&#10;        android:required=&quot;false&quot; /&gt;&#10;&#10;    &lt;queries&gt;&#10;        &lt;intent&gt;&#10;            &lt;action android:name=&quot;android.intent.action.SENDTO&quot; /&gt;&#10;&#10;            &lt;data android:scheme=&quot;mailto&quot; /&gt;&#10;        &lt;/intent&gt;&#10;    &lt;/queries&gt;&#10;&#10;    &lt;application&#10;        android:allowBackup=&quot;true&quot;&#10;        android:dataExtractionRules=&quot;@xml/data_extraction_rules&quot;&#10;        android:fullBackupContent=&quot;@xml/backup_rules&quot;&#10;        android:icon=&quot;@mipmap/ic_launcher&quot;&#10;        android:label=&quot;@string/app_name&quot;&#10;        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;&#10;        android:name=&quot;.di.App&quot;&#10;        android:supportsRtl=&quot;true&quot;&#10;        android:theme=&quot;@style/Theme.SmartConstatClient&quot;&gt;&#10;        &lt;activity&#10;            android:name=&quot;.auth.presentation.AuthActivity&quot;&#10;            android:exported=&quot;true&quot;&#10;            android:launchMode=&quot;singleTop&quot;&#10;            android:configChanges=&quot;orientation|screenSize|screenLayout|keyboardHidden|navigation&quot;&gt;&#10;            &lt;intent-filter&gt;&#10;                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;&#10;&#10;                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;&#10;            &lt;/intent-filter&gt;&#10;        &lt;/activity&gt;&#10;        &lt;activity&#10;            android:name=&quot;.main.presentation.MainActivity&quot;&#10;            android:exported=&quot;false&quot;&#10;            android:configChanges=&quot;orientation|screenSize|screenLayout|keyboardHidden|navigation&quot; &gt;&#10;            &lt;intent-filter&gt;&#10;                &lt;action android:name=&quot;android.nfc.action.NDEF_DISCOVERED&quot; /&gt;&#10;                &lt;category android:name=&quot;android.intent.category.DEFAULT&quot; /&gt;&#10;                &lt;action android:name=&quot;android.nfc.action.TAG_DISCOVERED&quot; /&gt;&#10;                &lt;action android:name=&quot;android.nfc.action.TECH_DISCOVERED&quot; /&gt;&#10;                &lt;data android:mimeType=&quot;text/plain&quot; /&gt;&#10;            &lt;/intent-filter&gt;&#10;&#10;            &lt;meta-data&#10;                android:name=&quot;android.nfc.action.TECH_DISCOVERED&quot;&#10;                android:resource=&quot;@xml/nfc_tech_filter&quot; /&gt;&#10;        &lt;/activity&gt;&#10;    &lt;/application&gt;&#10;&#10;&lt;/manifest&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/smartcaravans/constat/client/main/domain/apollo/ConstatsQuery.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/smartcaravans/constat/client/main/domain/apollo/ConstatsQuery.kt" />
              <option name="originalContent" value="package smartcaravans.constat.client.main.domain.apollo&#10;&#10;            // For now, returning a placeholder that matches the structure&#10;        }&#10;    &quot;&quot;&quot;&#10;&#10;    /**&#10;     * Raw GraphQL query string for constats with pagination&#10;     */&#10;    const val PAGINATED_CONSTATS_QUERY = &quot;&quot;&quot;&#10;        query GetConstats(${'$'}pagination: PaginationInput) {&#10;            getConstats(pagination: ${'$'}pagination) {&#10;                data {&#10;                    id&#10;                    driverAId&#10;                    driverBId&#10;                    dateTime&#10;                    location&#10;                    injuredCount&#10;                    createdAt&#10;                    status&#10;                }&#10;            }&#10;        }&#10;    &quot;&quot;&quot;&#10;}&#10;" />
              <option name="updatedContent" value="package smartcaravans.constat.client.main.domain.apollo&#10;&#10;            // For now, returning a placeholder that matches the structure&#10;            ConstatsQueryResponse(&#10;                getConstats = ConstatsData(data = emptyList())&#10;            )&#10;        }&#10;    }&#10;&#10;    override fun adapter(): Adapter&lt;ConstatsQueryResponse&gt; {&#10;        return object : Adapter&lt;ConstatsQueryResponse&gt; {&#10;            override fun fromJson(reader: com.apollographql.apollo.api.json.JsonReader, customScalarAdapters: CustomScalarAdapters): ConstatsQueryResponse {&#10;                // Basic implementation - would typically use Apollo's generated adapters&#10;                return ConstatsQueryResponse(&#10;                    getConstats = ConstatsData(data = emptyList())&#10;                )&#10;            }&#10;&#10;            override fun toJson(writer: JsonWriter, customScalarAdapters: CustomScalarAdapters, value: ConstatsQueryResponse) {&#10;                // Not typically used for query responses&#10;            }&#10;        }&#10;    }&#10;&#10;    override fun serializeVariables(&#10;        writer: JsonWriter,&#10;        customScalarAdapters: CustomScalarAdapters,&#10;        withDefaultValues: Boolean&#10;    ) {&#10;        if (pagination != null) {&#10;            writer.name(&quot;pagination&quot;)&#10;            writer.beginObject()&#10;            pagination.page?.let { &#10;                writer.name(&quot;page&quot;)&#10;                writer.value(it)&#10;            }&#10;            pagination.limit?.let { &#10;                writer.name(&quot;limit&quot;)&#10;                writer.value(it)&#10;            }&#10;            pagination.sortBy?.let { &#10;                writer.name(&quot;sortBy&quot;)&#10;                writer.value(it)&#10;            }&#10;            pagination.sortOrder?.let { &#10;                writer.name(&quot;sortOrder&quot;)&#10;                writer.value(it)&#10;            }&#10;            writer.endObject()&#10;        }&#10;    }&#10;&#10;    override fun rootField(): CompiledField {&#10;        return CompiledField.Builder(&quot;getConstats&quot;, com.apollographql.apollo.api.btypes.GraphQLObjectType(&quot;Query&quot;))&#10;            .build()&#10;    }&#10;}&#10;&#10;// Convenience methods for different constats query scenarios&#10;object ConstatsQueries {&#10;&#10;    /**&#10;     * Query for all constats without pagination&#10;     */&#10;    fun allConstats(): ConstatsQuery = ConstatsQuery()&#10;&#10;    /**&#10;     * Query for constats with pagination&#10;     */&#10;    fun constatsWithPagination(&#10;        page: Int? = null,&#10;        limit: Int? = null,&#10;        sortBy: String? = null,&#10;        sortOrder: String? = null&#10;    ): ConstatsQuery = ConstatsQuery(&#10;        PaginationInput(page, limit, sortBy, sortOrder)&#10;    )&#10;&#10;    /**&#10;     * Raw GraphQL query string for all constats&#10;     */&#10;    const val ALL_CONSTATS_QUERY = &quot;&quot;&quot;&#10;        query GetConstats {&#10;            getConstats(pagination: null) {&#10;                data {&#10;                    id&#10;                    driverAId&#10;                    driverBId&#10;                    dateTime&#10;                    location&#10;                    injuredCount&#10;                    createdAt&#10;                    status&#10;                }&#10;            }&#10;        }&#10;    &quot;&quot;&quot;&#10;&#10;    /**&#10;     * Raw GraphQL query string for constats with pagination&#10;     */&#10;    const val PAGINATED_CONSTATS_QUERY = &quot;&quot;&quot;&#10;        query GetConstats(${'$'}pagination: PaginationInput) {&#10;            getConstats(pagination: ${'$'}pagination) {&#10;                data {&#10;                    id&#10;                    driverAId&#10;                    driverBId&#10;                    dateTime&#10;                    location&#10;                    injuredCount&#10;                    createdAt&#10;                    status&#10;                }&#10;            }&#10;        }&#10;    &quot;&quot;&quot;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/xml/nfc_tech_filter.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/xml/nfc_tech_filter.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;resources xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;    &lt;!-- Support reading/writing NDEF and formatting tags --&gt;&#10;    &lt;tech-list&gt;&#10;        &lt;tech&gt;android.nfc.tech.Ndef&lt;/tech&gt;&#10;    &lt;/tech-list&gt;&#10;    &lt;tech-list&gt;&#10;        &lt;tech&gt;android.nfc.tech.NdefFormatable&lt;/tech&gt;&#10;    &lt;/tech-list&gt;&#10;    &lt;!-- Common base technologies --&gt;&#10;    &lt;tech-list&gt;&#10;        &lt;tech&gt;android.nfc.tech.NfcA&lt;/tech&gt;&#10;    &lt;/tech-list&gt;&#10;    &lt;tech-list&gt;&#10;        &lt;tech&gt;android.nfc.tech.NfcB&lt;/tech&gt;&#10;    &lt;/tech-list&gt;&#10;    &lt;tech-list&gt;&#10;        &lt;tech&gt;android.nfc.tech.NfcF&lt;/tech&gt;&#10;    &lt;/tech-list&gt;&#10;    &lt;tech-list&gt;&#10;        &lt;tech&gt;android.nfc.tech.NfcV&lt;/tech&gt;&#10;    &lt;/tech-list&gt;&#10;&lt;/resources&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>